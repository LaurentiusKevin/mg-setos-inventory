# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.4-node-browsers

    steps:
      - checkout

      - run:
          name: "Prepare Environment"
          command: |
            sudo apt update && sudo apt install -y software-properties-common
            if [[ $OSD_ID == "ubuntu" ]]; then
              sudo add-apt-repository -yu ppa:ondrej/php
            elif [[ $OSD_ID == "debian" ]]; then
              curl -fsSL https://packages.sury.org/php/apt.gpg | sudo apt-key add -
              sudo add-apt-repository "deb https://packages.sury.org/php/ $(lsb_release -cs) main"
            else
              echo "OS not supported."
            fi
            sudo apt update
            sudo apt-get install -y php7.4-gd
            sudo docker-php-ext-install zip

      - run:
          name: "Create Environment file"
          command: |
            mv .env.example .env

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

#      - run:
#          name: "Update Dependencies"
#          command: composer update

#      - run:
#          name: "Add Repository"
#          command: sudo add-apt-repository ppa:ondrej/php
#
#      - run:
#          name: "Update Repo List"
#          command: sudo apt-get update
#
#      - run:
#          name: "Install Extension"
#          command: sudo apt-get install -y php7.4-gd

      - run:
          name: "Install Dependencies"
          command: composer install

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      - run:
          name: "Generate App key"
          command: php artisan key:generate

      # run tests with phpunit
      - run:
          name: "Run Unit Tests"
          command: ./vendor/bin/phpunit tests/Unit
